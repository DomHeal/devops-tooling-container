name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  # schedule:
  #   - cron: '28 0 * * *'
  push:
    branches: [ main ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ main ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build:

    runs-on: self-hosted
    permissions:
      contents: read
      packages: write
      security-events: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2.9.1

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2.2.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}
          
#       - name: Lint
#         uses: hadolint/hadolint-action@v3.1.0
#         with:
#           dockerfile: Dockerfile
#           failure-threshold: error
          
      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4.6.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
             # branch event
             type=ref,event=branch
             # tag event
             type=ref,event=tag
             # pull request event
             type=ref,event=pr

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build Docker image
        id: build
        uses: docker/build-push-action@v4.1.1
        with:
          context: .
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          load: true
          
      - name: run structure tests
        uses: plexsystems/container-structure-test-action@v0.3.0
        if: runner.os == 'Linux' # Only supports linux
        with:
          image: ${{ steps.meta.outputs.tags }}
          config: tests/container_tests.yaml
          
      - name: Run Docker scan
        uses: aquasecurity/trivy-action@master
        if: ${{ github.ref == 'refs/heads/main' && runner.os == 'Linux' }}  # Only supports linux
        with:
          image-ref: ${{ steps.meta.outputs.tags }}
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results.sarif'
          timeout: 30m0s
          security-checks: 'vuln'
          
      - name: Upload scan results
        uses: github/codeql-action/upload-sarif@v2
        if: ${{ github.ref == 'refs/heads/main' && runner.os == 'Linux' }}  # Only supports linux
        with:
          sarif_file: 'trivy-results.sarif'

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Push Docker image
        id: push
        uses: docker/build-push-action@v4.1.1
        with:
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
